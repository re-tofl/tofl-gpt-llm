Контекстно-свободная (КС) грамматика это
________________________________________________________________
КС грамматика - это грамматика, у которой в левых частях всех правил стоят только одиночные нетерминалы.
Язык, задаваемый контекстно-свободной грамматикой, называется контекстно-свободным языком.
КС-грамматика: G = <N, ∑, P, S>, где правила имеют вид: A → β, где β ∈ (N + ∑)*
================================================================
Левосторонний (Левый) вывод в КС грамматике это
________________________________________________________________
Вывод в КС-грамматике левосторонний (левый), если на каждом шаге вывода заменяется самое левое из всех вхождений нетерминальных символов, 
то есть каждый шаг вывода имеет вид: uAθ —> uβθ, где (A → β) ∈ P, A ∈ N и θ ∈ (N U ∑)*, u ∈ ∑*.
Левосторонний вывод однозначно восстанавливается по дереву вывода.
================================================================
Леворекурсивная КС грамматика это
________________________________________________________________
Леворекурсивная грамматика - это грамматика, в которой есть нетерминал, который может быть заменен на себя самого в левом направлении, то есть грамматика, имеющая хотя бы один леворекурсивный нетерминал.
================================================================
Праворекурсивная КС грамматика это
________________________________________________________________
Праворекурсивная грамматика - это грамматика, в которой есть нетерминал, который может быть заменен на себя самого в правом направлении, то есть грамматика, имеющая хотя бы один праворекурсивный нетерминал.
================================================================
Рекурсивная КС грамматика это
________________________________________________________________
Рекурсивная грамматика - это грамматика,  в которой все нетерминалы рекурсивные (кроме, может быть, S).
================================================================
Бесполезный символ (нетерминал) в КС грамматике это
________________________________________________________________
Символ D (нетерминал) - бесполезный, если в грамматике нет вывода вида S → *wDy → *wvy, где v, w, y ∈ ∑*
================================================================
Неукорачивающая КС грамматика это
________________________________________________________________
Неукорачивающая КС грамматика -  это грамматика, которая может производить бесконечно длинные строки, то есть грамматика без ε-правил. Пример неукорачивающей КС грамматики: S → aSb | a.
================================================================
КС грамматика с цепным правилом это
________________________________________________________________
КС грамматика с цепным правилом - это КС грамматика, в которой есть правило вида A → B, где A, B ∈ N. Имеет правило замены, которое содержит цепочку нетерминалов.
Пример КС грамматики с цепным правилом: 
S → aBb | ε
B → bB | a
================================================================
КС грамматика без циклов
________________________________________________________________
КС грамматика без циклов - это КС грамматика, в которой нет правила: A → +A. То есть грамматика, которая не содержит циклов (кроме возможных циклов в терминальных символах), то есть, нетерминалы не могут быть заменены на себя самого через любое количество шагов.
Пример КС грамматики без циклов:
S → aAb | ε
A → b | c
================================================================
Приведённая КС грамматика это
________________________________________________________________
Приведённая КС грамматика - это грамматика без циклов, без бесполезных символов и без цепных правил.
================================================================
Алгоритм удаления бесполезных (непорождающих) символов в КС грамматике
________________________________________________________________
1. Берём все правила, в правой части которых есть хотя бы один терминал. Берём оттуда
множество всех терминалов и нетерминалов слева.
2. Берём все правила, в правой части которых встречаются нетерминалы только из нашего
множества. Добавляем нетерминалы слева в наше множество. Повторяем.
3. На каком то шаге множество стабилизируется (все выводимые правила будут учтены). В нашем
множестве остались терминалы и все небесполезные нетерминалы.
4. Берём разность всех нетерминалов и нетерминалов из нашего построенного множества. Это
будут бесполезные нетерминалы.
5. Удаляем все правила, в которых встречаются бесполезные нетерминалы
================================================================
Алгоритм удаления недостижимых символов
________________________________________________________________
1. Берём множество, состоящее из S.
2. Добавляем в наше множество все нетерминалы и терминалы, которые стоят в правой части
правил, в левой части которых нетерминалы из нашего множества.
3. На каком-то шаге множество стабилизируется (все выводимые правила будут учтены). В нашем
множестве остались только достижимые символы (терминалы и нетерминалы).
4. Берём разность всех нетерминалов и нетерминалов из нашего построенного множества. Это
будут бесполезные нетерминалы. То же самое и с терминалами.
5. Удаляем все правила, в которых встречаются бесполезные нетерминалы. То же самое и с терминалами.
================================================================
Алгоритм удаления ε-правил
________________________________________________________________
1. Нашли все ε-правила. Добавили в множество нетерминалы из левых частей этих ε-правил.
2. Заменили во всех правилах нетерминалы из нашего множества на ε.
3. Убрали все ε (ε^n = ε).
4. Повторяем с шага 1, пока можем найти новые ε-правила.
5. Для всех правил вида A → B, где для B существует ε-правило, добавим правила вида A → ε, если таких еще нет.
6. Удаляем все изначальные ε-правила (т.е. те, которые нашли на 1-ом шаге).
================================================================
Алгоритм удаления цепного правила
________________________________________________________________
Если встретилось цепное правило A → B, и в P есть правило вида B → α, α ∈ (N + ∑)*, то добавим правило A → α, а правило A → B вычеркнем.
================================================================





